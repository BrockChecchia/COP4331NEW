{"ast":null,"code":"var _jsxFileName = \"/home/reia/cards/frontend/src/components/Login.js\";\nimport React, { useState } from 'react';\n\nvar jwt = require('jsonwebtoken');\n\nconst BASE_URL = 'http://localhost:5000/';\n\nfunction Login() {\n  var loginName;\n  var loginPassword; //  password for token encryption\n\n  var ePassword = \"shhhhh\";\n  const [message, setMessage] = useState('');\n\n  const doLogin = async event => {\n    event.preventDefault();\n    var js = '{\"userName\":\"' + loginName.value + '\",\"Password\":\"' + loginPassword.value + '\"}';\n\n    try {\n      var token = jwt.sign(js, ePassword);\n      var tokenJSON = '{\"token\":\"' + token + '\"}';\n      const response = await fetch(BASE_URL + 'api/loginAdmin', {\n        method: 'POST',\n        body: tokenJSON,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); // verify returned token\n\n      var res = jwt.verify(JSON.parse(await response.text()).token, ePassword);\n\n      if (res.error != \"\") {\n        setMessage('User/Password combination incorrect');\n      }\n\n      if (res.isVerified === false) {\n        setMessage('Please check you email to verify your account');\n      } else {\n        var user = {\n          firstName: res.firstName,\n          lastName: res.lastName,\n          id: res.id,\n          userName: loginName.value\n        };\n        localStorage.setItem('user_data', JSON.stringify(user));\n        setMessage('');\n        window.location.href = '/cards';\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    } // // START TEST DEBUG\n    // try {\n    //   var js2 = '{\"userName\":\"'\n    //     + loginName.value\n    //     + '\",\"Password\":\"'\n    //     + loginPassword.value + '\"}';\n    //   var token = jwt.sign(js2, 'shhhhh');\n    //   var tokenJSON = '{\"token\":\"' + token + '\"}';\n    //   document.getElementById(\"inner-title\").innerHTML = tokenJSON;\n    //   const responseTEST = await fetch(BASE_URL + 'api/jwtTest',\n    //     { method: 'POST', body: tokenJSON, headers: { 'Content-Type': 'application/json' } });\n    //     var res2 = JSON.parse(await responseTEST.text());\n    //   alert(res2.Password);\n    // }\n    // catch (e) {\n    //   alert(e.toString());\n    //   return;\n    // }\n    // // END TEST DEBUG\n\n  }; // swap to signup\n\n\n  const gotoSignup = event => {\n    event.preventDefault();\n    document.getElementById(\"loginDiv\").style.display = \"none\";\n    document.getElementById(\"signupDiv\").style.display = \"block\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loginDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: doLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"inner-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"loginName\",\n    placeholder: \"Username\",\n    ref: c => loginName = c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 95\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"loginPassword\",\n    placeholder: \"Password\",\n    ref: c => loginPassword = c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 107\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"loginButton\",\n    class: \"buttons\",\n    onClick: doLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \" Login \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 99\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"switchToSignup\",\n    class: \"buttons\",\n    onClick: gotoSignup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Make Account\")), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"loginResult\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, message));\n}\n\n;\nexport default Login;","map":{"version":3,"sources":["/home/reia/cards/frontend/src/components/Login.js"],"names":["React","useState","jwt","require","BASE_URL","Login","loginName","loginPassword","ePassword","message","setMessage","doLogin","event","preventDefault","js","value","token","sign","tokenJSON","response","fetch","method","body","headers","res","verify","JSON","parse","text","error","isVerified","user","firstName","lastName","id","userName","localStorage","setItem","stringify","window","location","href","e","alert","toString","gotoSignup","document","getElementById","style","display","c"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nvar jwt = require('jsonwebtoken');\n\nconst BASE_URL = 'http://localhost:5000/';\n\nfunction Login() {\n\n  var loginName;\n  var loginPassword;\n\n  //  password for token encryption\n  var ePassword = \"shhhhh\";\n\n  const [message, setMessage] = useState('');\n\n\n\n  const doLogin = async event => {\n    event.preventDefault();\n\n    var js = '{\"userName\":\"'\n      + loginName.value\n      + '\",\"Password\":\"'\n      + loginPassword.value + '\"}';\n\n    try {\n      var token = jwt.sign(js, ePassword);\n\n      var tokenJSON = '{\"token\":\"' + token + '\"}';\n\n      const response = await fetch(BASE_URL + 'api/loginAdmin',\n        { method: 'POST', body: tokenJSON, headers: { 'Content-Type': 'application/json' } });\n\n      // verify returned token\n      var res = jwt.verify(JSON.parse(await response.text()).token, ePassword);\n\n      if (res.error != \"\") {\n        setMessage('User/Password combination incorrect');\n      }\n      if (res.isVerified === false){\n        setMessage('Please check you email to verify your account');\n      }\n      else {\n        var user = { firstName: res.firstName, lastName: res.lastName, id: res.id, userName: loginName.value }\n        localStorage.setItem('user_data', JSON.stringify(user));\n\n        setMessage('');\n        window.location.href = '/cards';\n      }\n    }\n    catch (e) {\n      alert(e.toString());\n      return;\n    }\n\n    // // START TEST DEBUG\n    // try {\n\n    //   var js2 = '{\"userName\":\"'\n    //     + loginName.value\n    //     + '\",\"Password\":\"'\n    //     + loginPassword.value + '\"}';\n\n\n    //   var token = jwt.sign(js2, 'shhhhh');\n\n    //   var tokenJSON = '{\"token\":\"' + token + '\"}';\n\n    //   document.getElementById(\"inner-title\").innerHTML = tokenJSON;\n\n    //   const responseTEST = await fetch(BASE_URL + 'api/jwtTest',\n    //     { method: 'POST', body: tokenJSON, headers: { 'Content-Type': 'application/json' } });\n\n    //     var res2 = JSON.parse(await responseTEST.text());\n    //   alert(res2.Password);\n\n\n    // }\n    // catch (e) {\n    //   alert(e.toString());\n    //   return;\n    // }\n    // // END TEST DEBUG\n\n  }\n\n  // swap to signup\n  const gotoSignup = event => {\n    event.preventDefault();\n\n    document.getElementById(\"loginDiv\").style.display = \"none\";\n    document.getElementById(\"signupDiv\").style.display = \"block\";\n  }\n\n\n  return (\n    <div id=\"loginDiv\">\n      <form onSubmit={doLogin}>\n        <span id=\"inner-title\">Login</span><br /><br />\n        <input type=\"text\" id=\"loginName\" placeholder=\"Username\" ref={(c) => loginName = c} /><br />\n        <input type=\"password\" id=\"loginPassword\" placeholder=\"Password\" ref={(c) => loginPassword = c} /><br />\n        <button type=\"button\" id=\"loginButton\" class=\"buttons\" onClick={doLogin}> Login </button> <br />\n        <button type=\"button\" id=\"switchToSignup\" class=\"buttons\" onClick={gotoSignup}>Make Account</button>\n\n      </form>\n      <span id=\"loginResult\">{message}</span>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}